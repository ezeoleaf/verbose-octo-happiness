package main

import (
	"fmt"
	"net/http"

	"github.com/ezeoleaf/bankapp/handlers"
	_ "github.com/joho/godotenv/autoload"

	// "github.com/labstack/echo"
	echo "github.com/labstack/echo/v4"
	"github.com/labstack/echo/v4/middleware"
	echoSwagger "github.com/swaggo/echo-swagger"

	_ "github.com/ezeoleaf/bankapp/docs" // docs is generated by Swag CLI, you have to import it.
)

const (
	port = ":1323" //TODO: Move to an .env file
)

// @title Golang Bank Application
// @version 1.0
// @description This is a sample server celler server.

// @contact.name Ezequiel Olea Figueroa
// @contact.url https://www.github.com/ezeoleaf
// @contact.email ezeoleaf@gmail.com

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @host localhost:1323
// @BasePath /
// @query.collection.format multi
func startAPI() {
	e := echo.New()

	e.Use(middleware.Logger())
	e.Use(middleware.Recover())
	e.Use(middleware.CORS())

	e.HTTPErrorHandler = func(err error, c echo.Context) {
		// Take required information from error and context and send it to a service like New Relic
		fmt.Println(c.Path(), c.QueryParams(), err.Error())
		// Call the default handler to return the HTTP response
		e.DefaultHTTPErrorHandler(err, c)
	}
	initRoutes(e)

	e.Logger.Fatal(e.Start(port))
}

func initRoutes(e *echo.Echo) {

	e.GET("/", func(c echo.Context) error {
		return c.String(http.StatusOK, "BANK API")
	})
	e.GET("/swagger/*", echoSwagger.WrapHandler)
	e.GET("/transactions/:userID", handlers.GetTransactions())
}
